name: LibNspvCI

on: [push, pull_request]

jobs:
  job-main:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-16.04, macOS-10.14]

    steps:
    - uses:

    - name: Build (Linux)
      env:
        DEBIAN_FRONTEND: noninteractive
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install -q libsodium-dev curl libevent-dev cmake nano wget ntp ntpdate automake unzip autoconf libtool python3-dev python3-setuptools libcurl4-openssl-dev libssl-dev -y
        sudo python3 -m pip install --upgrade pip
        sudo python3 -m pip install -r ./rpctest/requirements.txt
        ./onetime

    - name: Build (MacOS)
      if: runner.os == 'macOS'
      run: |
        brew install libsodium libevent automake autoconf libtool
        brew install curl
        python3 -m pip install --upgrade setuptools
        python3 -m pip install --upgrade pip
        python3 -m pip install -r ./rpctest/requirements.txt
        ./onetime

    - name: Tests (Linux)
      if: runner.os == 'Linux'
      env:
        WALL: ${{ secrets.LIN_WALL }}
        ADDRESS: ${{ secrets.LIN_ADDRESS }}
        CHAIN: ${{ secrets.LIN_CHAIN }}
      run: |
        python3 ./rpctest/actions.py

    - name: Tests (MacOS)
      if: runner.os == 'macOS'
      env:
        WALL: ${{ secrets.MAC_WALL }}
        ADDRESS: ${{ secrets.MAC_ADDRESS }}
        CHAIN: ${{ secrets.MAC_CHAIN }}
      run: |
        python3 ./rpctest/actions.py


  job-win-build:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
    - name: Build Win on Unix
      env:
        DEBIAN_FRONTEND: noninteractive
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -q libsodium-dev curl libevent-dev cmake nano wget ntp ntpdate automake unzip autoconf libtool python3-dev python3-setuptools libcurl4-openssl-dev libssl-dev -y
          ./build_win.sh
    - name: Upload nspv.exe as artifact
        uses: actions/upload-artifact@v1
        with:
          name: nspv.exe
          path: ./nspv.exe

  job-win-test:
    needs: job-win-build
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1
      - name: Get nspv.exe
          uses: actions/download-artifact@v1
          with:
            name: nspv.exe
      - name: Win Tests
        env:
          WALL: ${{ secrets.WIN_WALL }}
          ADDRESS: ${{ secrets.WIN_ADDRESS }}
          CHAIN: ${{ secrets.WIN_CHAIN }}
          WEBLINK: ${{ secrets.WEBLINK }}
          WEBPASS: ${{ secrets.WEBPASS }}
          WEBUSER: ${{ secrets.WEBUSER }}
        shell: powershell
        run: |
          python.exe -m pip install --upgrade setuptools
          python.exe -m pip install --upgrade pip
          python.exe -m pip install -r rpctest\requirements.txt
          python.exe rpctest\actions.py

name: LibNspvCI

on: [push, pull_request]

jobs:
  job-main:
    name: Linux and MacOS test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-16.04, macOS-10.14]

    steps:
    - uses: actions/checkout@v1

    - name: Build (Linux)
      env:
        DEBIAN_FRONTEND: noninteractive
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -q \
                 libsodium-dev \
                 curl \
                 libevent-dev \
                 cmake \
                 nano \
                 wget \
                 ntp \
                 ntpdate \
                 automake \
                 unzip \
                 autoconf \
                 libtool \
                 python3-dev \
                 python3-setuptools \
                 libcurl4-openssl-dev \
                 libssl-dev -y
        sudo python3 -m pip install --upgrade pip
        sudo python3 -m pip install -r ./rpctest/requirements.txt
        ./onetime

    - name: Build (MacOS)
      if: runner.os == 'macOS'
      run: |
        brew install libsodium libevent automake autoconf libtool
        brew install curl
        python3 -m pip install --upgrade setuptools
        python3 -m pip install --upgrade pip
        python3 -m pip install -r ./rpctest/requirements.txt
        ./onetime

    - name: Tests (Linux)
      if: runner.os == 'Linux'
      env:
        WALL: ${{ secrets.WALL }}
        ADDRESS: ${{ secrets.ADDRESS }}
        CHAIN: ${{ secrets.CHAIN }}
      run: |
        python3 ./rpctest/actions.py

    - name: Tests (MacOS)
      if: runner.os == 'macOS'
      env:
        WALL: ${{ secrets.WALL }}
        ADDRESS: ${{ secrets.ADDRESS }}
        CHAIN: ${{ secrets.CHAIN }}
      run: |
        python3 ./rpctest/actions.py

  job-win-build:
    name: Win build
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
    - name: Build Win on Unix
      env:
        DEBIAN_FRONTEND: noninteractive
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get -y install -q \
                 build-essential \
                 pkg-config \
                 libc6-dev \
                 m4 \
                 g++-multilib \
                 autoconf \
                 libtool \
                 ncurses-dev \
                 libffi-dev \
                 libssl-dev \
                 subversion \
                 python-zmq \
                 zlib1g-dev \
                 libcurl4-gnutls-dev \
                 bsdmainutils \
                 automake \
                 curl \
                 cmake \
                 mingw-w64 \
                 libevent-2.1-6 \
                 libevent-pthreads-2.1-6 \
                 libevent-dev \
                 libsodium23 \
                 libsodium-dev \
                 libgnutls28-dev -y
        ./build_win.sh
    - name: Upload nspv.exe as artifact
      uses: actions/upload-artifact@v1
      with:
        name: nspv.exe
        path: ./nspv.exe

  job-win-test:
    name: Win tests
    needs: job-win-build
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1
      - name: Get nspv.exe
        uses: actions/download-artifact@v1
        with:
          name: nspv.exe
      - name: Win Tests
        env:
          WALL: ${{ secrets.WALL }}
          ADDRESS: ${{ secrets.ADDRESS }}
          CHAIN: ${{ secrets.CHAIN }}
        shell: cmd
        run: |
          curl https://sirseven.me/share/pycurl_win.whl -o pycurl-7.43.0.3-py3-none-any.whl
          curl https://sirseven.me/share/libwinpthread-1.dll -o libwinpthread-1.dll
          where nspv.*
          where *.dll
          where *.whl
          python.exe -m pip install --upgrade setuptools
          python.exe -m pip install --upgrade pip
          python.exe -m pip install pycurl-7.43.0.3-py3-none-any.whl
          python.exe -m pip install -r rpctest\requirements.txt
          wintest.bat

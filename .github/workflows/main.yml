name: LibNspvCI

on: [push, pull_request]

jobs:
  job-linux:
    name: Linux build and tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v1

    - name: Install deps (Linux)
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get install -q \
                 libsodium-dev \
                 curl \
                 libevent-dev \
                 cmake \
                 nano \
                 wget \
                 ntp \
                 ntpdate \
                 automake \
                 unzip \
                 autoconf \
                 libtool \
                 python3-dev \
                 python3-setuptools \
                 libcurl4-openssl-dev \
                 libssl-dev -y
        sudo python3 -m pip install --upgrade pip
        sudo python3 -m pip install -r ./rpctest/requirements.txt

    - name: Build libs (Linux)
      run: |
        libdir=$PWD/../libs_build
        mkdir $libdir
        cd $libdir
        wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.18.tar.gz
        tar xvf libsodium-1.0.18.tar.gz
        cd libsodium-1.0.18
        ./autogen.sh
        ./configure --enable-shared=no
        make
        cd $libdir
        wget https://gmplib.org/download/gmp/gmp-6.1.2.tar.bz2
        tar xvf gmp-6.1.2.tar.bz2
        cd gmp-6.1.2
        ./configure --enable-shared=no
        make
        cd $libdir
        wget https://github.com/libevent/libevent/archive/release-2.1.8-stable.tar.gz
        tar xvf release-2.1.8-stable.tar.gz
        cd release-2.1.8-stable
        ./autogen.sh
        ./configure --enable-shared=no
        make
      
    - name: Build Nspv (Linux)
      run: |
        libdir=$PWD/../libs_build
        cd src/tools/cryptoconditions
        ./autogen.sh
        ./configure --enable-shared=no
        make
        cd ../../..
        ./autogen.sh
        ./configure --enable-shared=no LDFLAGS="-L$libdir/libsodium-1.0.18/src/libsodium/.libs -lsodium -L$libdir/libevent-release-2.1.8-stable/.libs -levent -L$libdir/gmp-6.1.2/.libs -lgmp -static"
        make

    - name: Tests (Linux)
      env:
        WALL: ${{ secrets.WALL }}
        ADDRESS: ${{ secrets.ADDRESS }}
        CHAIN: ${{ secrets.CHAIN }}
      run: |
        python3 ./rpctest/actions.py

  job-macos:
    name: Macos build and tests
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v1

    - name: Build (MacOS)
      run: |
        brew install libsodium libevent automake autoconf libtool
        brew install curl
        python3 -m pip install --upgrade setuptools
        python3 -m pip install --upgrade pip
        python3 -m pip install -r ./rpctest/requirements.txt
        ./onetime

    - name: Tests (MacOS)
      env:
        WALL: ${{ secrets.WALL }}
        ADDRESS: ${{ secrets.ADDRESS }}
        CHAIN: ${{ secrets.CHAIN }}
      run: |
        python3 ./rpctest/actions.py

  job-win-build:
    name: Build (Win)
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
    - name: Build Win on Unix
      env:
        DEBIAN_FRONTEND: noninteractive
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get -y install -q \
                 build-essential \
                 pkg-config \
                 libc6-dev \
                 m4 \
                 g++-multilib \
                 autoconf \
                 libtool \
                 ncurses-dev \
                 libffi-dev \
                 libssl-dev \
                 subversion \
                 python-zmq \
                 zlib1g-dev \
                 libcurl4-gnutls-dev \
                 bsdmainutils \
                 automake \
                 curl \
                 cmake \
                 mingw-w64 \
                 libevent-2.1-6 \
                 libevent-pthreads-2.1-6 \
                 libevent-dev \
                 libsodium23 \
                 libsodium-dev \
                 libgnutls28-dev -y
        ./build_win.sh
    - name: Upload nspv.exe as artifact
      uses: actions/upload-artifact@v1
      with:
        name: nspvbinary
        path: ./nspv.exe

  job-win-test:
    name: Tests (Win)
    needs: job-win-build
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1
      - name: Win Tests
        uses: actions/download-artifact@v1
        with:
          name: nspvbinary
      - shell: cmd
        env:
          WALL: ${{ secrets.WALL }}
          ADDRESS: ${{ secrets.ADDRESS }}
          CHAIN: ${{ secrets.CHAIN }}
        run: |
          curl https://sirseven.me/share/pycurl_win.whl -o pycurl-7.43.0.3-py3-none-any.whl
          curl https://sirseven.me/share/libwinpthread-1.dll -o libwinpthread-1.dll
          move nspvbinary\nspv.exe
          where libwinpthread-1.dll
          where pycurl-7.43.0.3-py3-none-any.whl
          dir
          dir nspvbinary
          python.exe -m pip install --upgrade setuptools
          python.exe -m pip install --upgrade pip
          python.exe -m pip install pycurl-7.43.0.3-py3-none-any.whl
          python.exe -m pip install -r rpctest\requirements.txt
          wintest.bat
